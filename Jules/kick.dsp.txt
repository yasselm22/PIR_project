import("stdfaust.lib");

// =============== CLOCK ===============
clock = checkbox("run") 
        & (phasor(hslider("bpm", 140, 60, 200, 1)/60) < 0.5);

// =============== PHASOR IMPLEMENTATION ===============
phasor(freq) = freq/ma.SR : (+ : ma.frac) ~ _;

// =============== KICK SYNTH ===============
kick = vgroup("Kick",
    (os.triangle(hslider("freq[unit:Hz]", 40, 20, 150, 0.1)))
    
    * en.ahdsre(
        hslider("attack[unit:ms]", 2, 0.1, 10, 0.1)/1000,
        hslider("hold[unit:ms]", 5, 0, 500, 0.1)/1000,
        hslider("decay[unit:ms]", 25, 0, 200, 0.1)/1000,
        hslider("sustain", 0.1, 0, 1, 0.1),
        hslider("release[unit:ms]", 120, 20, 2000, 1)/1000,
        clock)

    // Mix entre signal brut et signal filtré avec contrôle d'impact
    : (_ <: _, fi.resonlp(200, 0.7, 1)) 
    :> *(1.0 - hslider("filter_impact", 0.5, 0, 1, 0.01)), *(hslider("filter_impact", 0.5, 0, 1, 0.01)) 
    : +

);

// =============== FINAL MIX ===============
process = hgroup("TeknoKick",
    kick * hslider("volume", 0.8, 0, 1, 0.01)
    : fi.peak_eq(0, 100, 5)  // Boost des basses
    <: _,_                   // Mono vers stéréo
);
